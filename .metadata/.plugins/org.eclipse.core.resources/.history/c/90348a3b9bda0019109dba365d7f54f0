package com.example;

import java.sql.SQLException;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

@Path("pessoas")
public class PessoaRessource {

	private PessoaService pessoaService = new PessoaService();

	@GET
	@Produces(MediaType.APPLICATION_JSON)	
	@Path("/")
	public List<Pessoa> listPessoas() {
		return pessoaService.listPessoas();
	}

	@GET
	@Produces(MediaType.APPLICATION_JSON)	
	@Path("{id}/")
	public Pessoa getPessoa(@PathParam("id") long id) {
		Pessoa pessoa = new Pessoa();
		return pessoa;
	}

	 @POST
	 @Consumes(MediaType.APPLICATION_JSON)
	 @Produces(MediaType.APPLICATION_JSON)
	@Path("/")
	public Response create(Pessoa pessoa) throws SQLException  {
		System.out.println(pessoa);
		pessoaService.create(pessoa);
		return Response.status(Response.Status.OK).build();
	}

	@PUT
	@Produces(MediaType.APPLICATION_JSON)	
	@Path("/")
	public Response update(Pessoa pessoa) {
		System.out.println(pessoa.toString());
		return Response.status(Response.Status.OK).build();
	}

	@DELETE
	@Produces(MediaType.APPLICATION_JSON)	
	@Path("{id}/")
	public Response delete(@PathParam("id") long id) {
		System.out.println("Deletando o id: "+id);
		return Response.status(Response.Status.OK).build();
	}
}
